[tool:pytest]
# pytest configuration for stock analysis system

# Test discovery
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Minimum version
minversion = 7.4

# Addopts (additional options)
addopts = 
    # Output options
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --color=yes
    
    # Coverage options (only for unit tests)
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --cov-branch
    
    # Performance options
    --durations=10
    --maxfail=5
    
    # Async support
    --asyncio-mode=auto
    
    # Warning handling
    --disable-warnings

# Test markers
markers =
    unit: Unit tests
    integration: Integration tests
    performance: Performance tests
    slow: Slow running tests (> 5 seconds)
    external_api: Tests that require external API access
    aws: Tests that require AWS services
    google_sheets: Tests that require Google Sheets API
    slack: Tests that require Slack API
    gemini: Tests that require Gemini AI API
    yahoo_finance: Tests that require Yahoo Finance API
    
    # Environment markers
    test: Test environment only
    staging: Staging environment tests
    production: Production environment tests (should not run automatically)
    
    # Feature markers
    data_models: Data model tests
    services: Service layer tests
    handlers: Handler/endpoint tests
    utils: Utility function tests
    analysis: Analysis logic tests
    notifications: Notification system tests
    error_handling: Error handling tests
    
    # Test type markers
    smoke: Smoke tests (basic functionality)
    regression: Regression tests
    security: Security-related tests
    load: Load testing
    stress: Stress testing

# Async configuration
asyncio_mode = auto

# Timeout settings
timeout = 300  # 5 minutes default timeout
timeout_method = thread

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::pytest.PytestUnraisableExceptionWarning
    ignore::urllib3.exceptions.InsecureRequestWarning

# Test collection configuration
collect_ignore = [
    "setup.py",
    "build",
    "dist",
    "*.egg-info",
    ".git",
    ".pytest_cache",
    "__pycache__",
    "node_modules"
]

# Minimum test coverage by module
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    .git/*
    build/*
    dist/*
    *.egg-info/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml